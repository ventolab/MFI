# Luz Garcia-Alonso
# Saez-Rodriguez Lab
# European Bioinformatics Institute (EMBL-EBI)
# 2018.03.26


# Load required packages
require(viper)
require(data.table)
require(ggplot2)
require(ggpubr)


# Load TF regulon genesets in VIPER format
load('/home/javier/Escritorio/CVID_scBS/RObjects/B_viperRegulon.rdata')
# Clean TF names & explore object
names(viper_regulon) = sapply(strsplit(names(viper_regulon), split = ' - '), head, 1)
# Explore the regulons object
names(viper_regulon)[1:10]
viper_regulon[[1]]


##########################################################################################
## Example 2: Computing TF activity changes from a differential gene expression signature
##########################################################################################
# Load differential expression signature

# Explore the signature
file <- fread('/home/javier/Escritorio/CVID_scBS/DEGs/twins/limma_DEGs/20210215_B_cells_memory_activated_CVID_vs_B_cells_memory_activated_CONTROL_limma_DEGs.csv')
#file <- fread('/home/javier/Documentos/DEGs/B_cells_CD40L_like_CVID_vs_B_cells_CD40L_like_CONTROL_limma_DEGs.csv')
# Exclude probes with unknown or duplicated gene symbol
DEsignature = subset(file, Gene != "" )
DEsignature = subset(DEsignature, ! duplicated(Gene))
# Estimatez-score values for the GES. Cheeck VIPER manual for details
myStatistics = matrix(DEsignature$logFC, dimnames = list(DEsignature$Gene, 'logFC') )
myPvalue = matrix(DEsignature$adj.P.Val, dimnames = list(DEsignature$Gene, 'P.Value') )
mySignature = (qnorm(myPvalue/2, lower.tail = FALSE) * sign(myStatistics))[, 1]
mySignature = mySignature[order(mySignature, decreasing = T)]
# Estimate TF activities
mrs = msviper(ges = mySignature, regulon = viper_regulon, minsize = 4, ges.filter = F)
TF_activities = data.frame(Regulon = names(mrs$es$nes),
                           Size = mrs$es$size[ names(mrs$es$nes) ],
                           NES = mrs$es$nes,
                           p.value = mrs$es$p.value,
                           FDR = p.adjust(mrs$es$p.value, method = 'fdr'))
TF_activities = TF_activities[ order(TF_activities$p.value), ]


plot = TF_activities[TF_activities$FDR < 0.05,]
plot = plot[order(plot$NES, decreasing = T),]
plot$Regulon = reorder(plot$Regulon, plot$NES*-1)
ggplot(plot, aes(fill=-log10(FDR), x=Regulon, y=NES, color="black")) + 
  geom_col(color="black", size=0.2) + theme_bw() + scale_fill_gradient(high = "#132B43", low = "#56B1F7") + coord_flip()
